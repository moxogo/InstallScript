services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo123
      POSTGRES_DB: odoo
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - odoo-db-data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - odoo_network

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    image: odoo:18.0
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9018:8069"
      - "8072:8072"
    volumes:
      - odoo-web-data:/var/lib/odoo
      - ./config:/etc/odoo
      - ./addons:/mnt/extra-addons
      - ./moxogo18:/mnt/extra-addons/moxogo18
      - ./logs:/var/log/odoo
      - ./backups:/mnt/backups
      - odoo-sessions:/mnt/.local
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo123
      POSTGRES_DB: odoo
      ADMIN_PASSWORD: admin
    command: odoo --config=/etc/odoo/odoo.conf --database odoo --init base --load-language en_US --without-demo all
    user: odoo
    restart: unless-stopped
    networks:
      - odoo_network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d:ro
      - nginx_conf:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    command: nginx -g 'daemon off;'
    networks:
      - odoo_network

volumes:
  odoo-web-data:
  odoo-db-data:
  nginx_conf:
  odoo-sessions:

networks:
  odoo_network:
    driver: bridge
