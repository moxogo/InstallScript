services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/letsencrypt:/etc/letsencrypt:ro
      - certbot-webroot:/var/www/html
      - nginx_conf:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    environment:
      NGINX_HOST: localhost
    command: nginx -g 'daemon off;'
    depends_on:
      - web
    networks:
      - odoo_network

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    image: odoo:18.0
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9018:8069"
      - "8072:8072"
    volumes:
      - odoo-web-data:/var/lib/odoo
      - ./config:/etc/odoo
      - ./logs:/var/log/odoo
      - ./addons:/mnt/extra-addons
      - type: bind
        source: ./moxogo18
        target: /mnt/extra-addons/moxogo18
        read_only: true
        consistency: cached
      - ./backups:/mnt/backups
      - odoo-sessions:/mnt/.local
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo123
      POSTGRES_DB: odoo
      ADMIN_PASSWORD: admin
    command: ["--config=/etc/odoo/odoo.conf"]
    user: odoo
    restart: always
    networks:
      - odoo_network

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo123
      POSTGRES_DB: odoo
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - odoo-db-data:/var/lib/postgresql/data/pgdata
      - ./config/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    command: postgres -c 'hba_file=/etc/postgresql/pg_hba.conf'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - odoo_network

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/letsencrypt:/etc/letsencrypt
      - certbot-webroot:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL} --agree-tos --no-eff-email --force-renewal -d ${DOMAIN}

volumes:
  odoo-web-data:
  odoo-db-data:
  certbot-webroot:
  nginx_conf:
  odoo-sessions:

networks:
  odoo_network:
    driver: bridge
